@page "/edit"
@page "/edit/{id:int}"
@using MyContacts.Shared
@inject IContactService ContactService


@if (Id == null)
{
    <PageTitle>Dodaj nowy kontakt</PageTitle>
    <h3>Dodaj nowy kontakt</h3>
}
else
{
    <PageTitle>Edytuj kontakt </PageTitle>
    <h3>Edytuj @contact.FistName @contact.LastName</h3>
}

<EditForm Model="contact" OnSubmit="HandleSubmit">
    <div>
        <label for="firstname">First Name</label>
        <InputText id="firstname" @bind-Value="contact.FistName" class="form-control"></InputText>
    </div>
    <div>
        <label for="lastname">Last Name</label>
        <InputText id="lastname" @bind-Value="contact.LastName" class="form-control"></InputText>
    </div>
    <div>
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="contact.Email" class="form-control"></InputText>
    </div>
    <div>
        <label>Category</label><br />
        <InputSelect @bind-Value="contact.Id" class="form-select">
            @foreach(var category in ContactService.Categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    Contact contact = new Contact { Category = new Category() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Zapisz nowy kontakt" : "Edytuj kontakt";
        await ContactService.GetCategories();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {

        }
        else 
        {
            contact = await ContactService.GetSingleContact((int)Id);
        }
    }

    async Task HandleSubmit()
    {

    }
}
